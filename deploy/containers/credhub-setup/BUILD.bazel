load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl",
    "container_bundle",
    "container_push",
)

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/example/project/deploy/containers/credhub-setup",
    visibility = ["//visibility:private"],
)

go_binary(
    name = "credhub-setup",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_image(
    name = "credhub-setup-image",
    embed = [":go_default_library"],
    pure = "on", # for GoOS support
    static = "on",
    goos = "linux",
    goarch = "amd64",
    visibility = ["//visibility:public"],
)

genrule(
    name = "credhub-setup-tag",
    outs = ["tag.txt"],
    cmd = """awk '$$1 == "BUILD_TIMESTAMP" { print $$2 }' bazel-out/volatile-status.txt > $@""",
    stamp = True,
)

# The bundle is only required to rename our image
container_bundle(
    name = "credhub-setup-bundle",
    images = {
        ":credhub-setup-tag": ":credhub-setup-image",
    },
    visibility = ["//visibility:public"],
)

container_push(
    name = "credhub-setup-push",
    format = "OCI",
    image = ":credhub-setup-image",
    registry = "{BUILD_HOST}:5000",
    repository = "cfcontainerization/credhub-setup",
    tag = "{BUILD_TIMESTAMP}",
)
