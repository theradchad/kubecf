workspace(name = "credhub_setup")

load(":def.bzl", "project")

local_repository(
    name = "external_binaries",
    path = "../../../rules/external_binaries",
)

load("@external_binaries//:def.bzl", "external_binary")

local_repository(
    name = "workspace_status",
    path = "../../../rules/workspace_status",
)

[external_binary(
    name = name,
    config = config,
) for name, config in project.external_binaries.items()]

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

[http_archive(
    name = name,
    sha256 = config.sha256,
    urls = [u.format(version = config.version) for u in config.urls],
    strip_prefix = getattr(config, "strip_prefix", "").format(version = config.version),
) for name, config in project.bazel_libs.items()]

load("@io_bazel_rules_docker//repositories:repositories.bzl", container_repositories = "repositories")

container_repositories()

load("@io_bazel_rules_docker//repositories:deps.bzl", container_deps = "deps")

container_deps()

load("@io_bazel_rules_go//go:deps.bzl", "go_rules_dependencies", "go_register_toolchains")

go_rules_dependencies()

go_register_toolchains()

# gazelle:repo bazel_gazelle
# gazelle:repository_macro repositories.bzl%go_repositories
load("@bazel_gazelle//:deps.bzl", "gazelle_dependencies")

gazelle_dependencies()

load("@io_bazel_rules_docker//go:image.bzl", _go_image_repos = "repositories")

_go_image_repos()

load("@rules_gomplate//:repositories.bzl", "gomplate_repositories")

gomplate_repositories()

load("//:repositories.bzl", "go_repositories")

go_repositories()
